services:
  
  checkout-write-service:
    build:
      context: ./write-side
      dockerfile: Dockerfile
    container_name: checkout-write
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=docker
    networks:
      - checkout-service-network

  
  checkout-read-service:
    build:
      context: ./read-side
      dockerfile: Dockerfile
    container_name: checkout-read
    ports:
      - "3001:3000"
    restart: always
    environment:
      - NODE_ENV=docker

    networks:
      - checkout-service-network

  checkout-projection-broker:
    image: apache/kafka:latest
    container_name: checkout-projection-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://checkout-projection-broker:9092,CONTROLLER://checkout-projection-broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://checkout-projection-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@checkout-projection-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

    networks:
      - checkout-service-network
    expose:
      - "9092"
      - "9093"

  idempotent-message-cache:
    image: redis:7-alpine
    networks:
      - checkout-service-network
    expose:
      - "6379"
networks:
  checkout-service-network: